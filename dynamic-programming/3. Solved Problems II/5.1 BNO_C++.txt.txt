#include <iostream>


using namespace std;



int rob_houses(int houses[], int n){
    
    
	
	if(n == 0)
        
	    return 0;
 
       
    
	// Initializing max_money[n+1] array
	int max_money[n+1];


	// Defining the base cases
    
	max_money[n] = 0;
    
	max_money[n-1] = houses[n-1];
    
    

	// Making the general recurrence relation
    
	for(int i = n-2; i >= 0; i-- ){
        
	    max_money[i] = max( houses[i] + max_money[i+2], max_money[i+1] );
    
	}
    
    
	
	// Returning the maximum money that we can make from house no. 0 onwards
    
	return max_money[0];

}



int main()
{
    
	
	int houses[] = {3,8,10,4,1,7,2};
    
	int n = sizeof(houses)/sizeof(houses[0]);
    
	
	cout << rob_houses(houses, n);


}
